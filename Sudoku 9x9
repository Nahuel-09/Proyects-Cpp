#include <iostream>
#include <cstdlib>
#include <ctime>

using namespace std;

const int N = 9;

//Crear un tablero para el sudoku
void imprimirTablero(int tablero[N][N]) {
    for (int fila = 0; fila < N; fila++) {
        if (fila % 3 == 0 && fila != 0) {
            cout << "----------------------" << endl;
        }
        for (int col = 0; col < N; col++) {
            if (col % 3 == 0 && col != 0) {
                cout << "| ";
            } 
            cout << tablero[fila][col] << " ";
        }          
        cout << endl;
    }
    cout << endl;
}

bool esSeguro(int tablero[N][N], int fila, int col, int num) {
    for (int x = 0; x < N; x++) {
        if (tablero[fila][x] == num) {
            return false;
        }
    }

    for (int x = 0; x < N; x++) {
        if (tablero[x][col] == num) {
            return false;
        }
    }

    int filarea = fila - fila % 3, colarea = col - col % 3;
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (tablero[i + filarea][j + colarea] == num) {
                return false;
            }
        }
    }

    return true;
}

bool resolverSudoku(int tablero[N][N]) {
    int fila, col;
    bool casillaVacia = false;

    for (fila = 0; fila < N; fila++) {
        for (col = 0; col < N; col++) {
            if (tablero[fila][col] == 0) {
                casillaVacia = true;
                break;
            }
        }
        if (casillaVacia) {
            break;
        }
    }

    if (!casillaVacia) {
        return true;
    }

    for (int num = 1; num <= 9; num++) {
        if (esSeguro(tablero, fila, col, num)) {
            tablero[fila][col] = num;

            if (resolverSudoku(tablero)) {
                return true;
            }

            tablero[fila][col] = 0;
        }
    }

    return false;
}

void llenarTableroAleatorio(int tablero[N][N]) {
    int numPistas = 17;
    while (numPistas > 0) {
        int fila = rand() % N;
        int col = rand() % N;
        int num = rand() % 9 + 1;

        if (tablero[fila][col] == 0 && esSeguro(tablero, fila, col, num)) {
            tablero[fila][col] = num;
            numPistas--; 
        }
    }
}

int main() {
    srand(time(0));  

    int tablero[N][N] = {0};  

    llenarTableroAleatorio(tablero);

    cout << "Tablero generado aleatoriamente:" << endl;
    imprimirTablero(tablero);

    if (resolverSudoku(tablero)) {
        cout << "Sudoku resuelto:" << endl;
        imprimirTablero(tablero);
    } else {
        cout << "No se pudo resolver el Sudoku." << endl;
    }

    return 0;
}
